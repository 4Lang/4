source
	: statement
	: source statement
statement
	: expression
	: IDENTIFIER COLON
	: GOTO expression
	: IF     expression compound_statement
	: ELSEIF expression compound_statement
	: ELSE              compound_statement
	: WHILE  expression compound_statement
	: CONTINUE
	: BREAK
	: IDENTIFIER argument_list
	: FUNC IDENTIFIER parameter_list compound_statement
	: RETURN
	: RETURN expression
compound_statement
	: INDENT statement
	: compound_statement INDENT statement
	
expression
	: logical_or_expression
	: lvalue_expression EQUALS        expression
	: lvalue_expression MUL_ASSIGN    expression
	: lvalue_expression DIV_ASSIGN    expression
	: lvalue_expression MOD_ASSIGN    expression
	: lvalue_expression ADD_ASSIGN    expression
	: lvalue_expression MIN_ASSIGN    expression
	: lvalue_expression LSHIFT_ASSIGN expression
	: lvalue_expression RSHIFT_ASSIGN expression
	: lvalue_expression AND_ASSIGN    expression
	: lvalue_expression XOR_ASSIGN    expression
	: lvalue_expression OR_ASSIGN     expression
logical_or_expression
	: logical_and_expression
	: logical_or_expression OR_OP logical_and_expression
logical_and_expression
	: inclusive_or_expression
	: logical_and_expression AND_OP inclusive_or_expression
inclusive_or_expression
	: exclusive_or_expression
	: inclusive_or_expression OR exclusive_or_expression
exclusive_or_expression
	: and_expression
	: exclusive_or_expression XOR and_expression
and_expression
	: equality_expression
	: and_expression AND equality_expression
equality_expression
	: relational_expression
	: equality_expression  EQ_OP relational_expression
	: equality_expression NEQ_OP relational_expression
relational_expression
	: shift_expression
	: relational_expression LT    shift_expression
	: relational_expression GT    shift_expression
	: relational_expression LE_OP shift_expression
	: relational_expression GE_OP shift_expression
shift_expression
	: additive_expression
	: shift_expression L_OP additive_expression
	: shift_expression R_OP additive_expression
additive_expression
	: multiplicative_expression
	: additive_expression ADD multiplicative_expression
	: additive_expression SUB multiplicative_expression
multiplicative_expression
	: unary_expression
	: multiplicative_expression MUL unary_expression
	: multiplicative_expression DIV unary_expression
	: multiplicative_expression MOD unary_expression
unary_expression
	: postfix_expression
	: INC_OP unary_expression
	: DEC_OP unary_expression
	: ADD    unary_expression
	: SUB    unary_expression
	: TILDE  unary_expression
	: NOT    unary_expression
postfix_expression
	: primary_expression
	: postfix_expression INC_OP
	: postfix_expression DEC_OP
	: postfix_expression DOT IDENTIFIER
	: postfix_expression LBRACKET expression RBRACKET
	: postfix_expression DBRACKET
	: postfix_expression UBRACKET
primary_expression
	: IDENTIFIER
	: IDENTIFIER LPARENT argument_list RPARENT
	: IDENTIFIER LPARENT RPARENT
	: VOID
	: INT_LITERAL
	: FLT_LITERAL
	: STR_LITERAL
	: TRUE
	: FALSE
	: LPARENT expression RPARENT
lvalue_expression
	: IDENTIFIER
	: lvalue_expression DOT IDENTIFIER
	: lvalue_expression LBRACKET expression RBRACKET
	: lvalue_expression LBRACKET RBRACKET
	: lvalue_expression EBRACKET
argument_list
	: expression
	: argument_list COMMA expression
parameter_list
	: IDENTIFIER
	: parameter_list COMMA IDENTIFIER